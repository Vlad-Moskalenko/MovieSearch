{"version":3,"file":"static/js/76.066f0b54.chunk.js","mappings":"yOACA,EAA2B,uBAA3B,EAA6D,uBAA7D,EAA+H,uBAA/H,EAAmK,yBAAnK,EAAoM,oB,oBCgEpM,EAtDa,WACX,IAAQA,GAAYC,EAAAA,EAAAA,MAAZD,QACFE,GAAWC,EAAAA,EAAAA,MACjB,GAA6BC,EAAAA,EAAAA,KAAY,SAAAC,GAAK,OAAIA,EAAMC,aAAaC,IAAvB,IAAtCC,EAAR,EAAQA,SAAUC,EAAlB,EAAkBA,OAQlB,OANAC,EAAAA,EAAAA,YAAU,WACJV,GACFE,GAASS,EAAAA,EAAAA,IAAaX,GAEzB,GAAE,CAACE,EAAUF,KAGZ,gCACc,YAAXS,IACED,EAASI,OAAS,GACjB,eAAIC,UAAWC,EAAf,SACGN,EAASO,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,KAAMC,EAAb,EAAaA,aAAcC,EAA3B,EAA2BA,UAA3B,OACZ,gBAAIN,UAAWC,EAAf,WACE,gBACED,UAAWC,EACXM,IACEF,EAAY,yCAC0BA,GAClCG,EAENC,IAAKL,GAAQ,UACbM,MAAM,WAER,iBAAKV,UAAWC,EAAhB,WACE,0BACE,qCACCG,GAAQ,cAEX,0BACE,yCACCE,GAAa,kBAlBcH,EADtB,OA0BhB,gBAAKH,UAAWC,EAAhB,mDAGQ,UAAXL,IACC,gBAAKI,UAAWC,EAAhB,mDAGU,YAAXL,IAAwB,SAAC,KAAD,CAASe,KAAK,SAG5C,C","sources":["webpack://react-homework-template/./src/components/Cast/Cast.module.css?c9ee","components/Cast/Cast.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"castList\":\"Cast_castList__ARoWn\",\"castItem\":\"Cast_castItem__-Jcfe\",\"spinner\":\"Cast_spinner__VXHER\",\"castMeta\":\"Cast_castMeta__+Ff+4\",\"castAvatar\":\"Cast_castAvatar__YTLV4\",\"empty\":\"Cast_empty__EEahE\"};","import { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useParams } from 'react-router-dom';\n\nimport { Spinner } from 'components';\n\nimport { getMovieCast } from 'redux/movieDetails/operations';\n\nimport css from './Cast.module.css';\nimport img404 from '../../images/404.jpg';\n\nconst Cast = () => {\n  const { movieId } = useParams();\n  const dispatch = useDispatch();\n  const { castList, status } = useSelector(state => state.movieDetails.cast);\n\n  useEffect(() => {\n    if (movieId) {\n      dispatch(getMovieCast(movieId));\n    }\n  }, [dispatch, movieId]);\n\n  return (\n    <>\n      {status === 'success' &&\n        (castList.length > 0 ? (\n          <ul className={css.castList}>\n            {castList.map(({ id, name, profile_path, character }) => (\n              <li className={css.castItem} key={id}>\n                <img\n                  className={css.castAvatar}\n                  src={\n                    profile_path\n                      ? `https://image.tmdb.org/t/p/w500${profile_path}`\n                      : img404\n                  }\n                  alt={name || 'unknown'}\n                  width=\"100px\"\n                />\n                <div className={css.castMeta}>\n                  <p>\n                    <span>Actor:</span>\n                    {name || 'unknown'}\n                  </p>\n                  <p>\n                    <span>Character:</span>\n                    {character || 'unknown'}\n                  </p>\n                </div>\n              </li>\n            ))}\n          </ul>\n        ) : (\n          <div className={css.empty}>Can't find information about cast...</div>\n        ))}\n\n      {status === 'error' && (\n        <div className={css.empty}>Haven't any information about cast...</div>\n      )}\n\n      {status === 'loading' && <Spinner size=\"80\" />}\n    </>\n  );\n};\n\nexport default Cast;\n"],"names":["movieId","useParams","dispatch","useDispatch","useSelector","state","movieDetails","cast","castList","status","useEffect","getMovieCast","length","className","css","map","id","name","profile_path","character","src","img404","alt","width","size"],"sourceRoot":""}