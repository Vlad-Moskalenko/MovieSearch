{"version":3,"file":"static/js/76.006ea6b4.chunk.js","mappings":"iOACA,EAA2B,uBAA3B,EAA6D,uBAA7D,EAA+F,uBAA/F,EAAmI,yBAAnI,EAAoK,oB,kBCiEpK,EAvDa,WACX,IAAQA,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAwBE,EAAAA,EAAAA,UAAS,GAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAA4BF,EAAAA,EAAAA,UAAS,WAArC,eAAOG,EAAP,KAAeC,EAAf,KAcA,OAZAC,EAAAA,EAAAA,YAAU,WACRD,EAAU,WAEVE,EAAAA,EAAAA,gBACmBR,GAChBS,MAAK,YAAe,IAAZN,EAAW,EAAXA,KACPC,EAAQD,GACRG,EAAU,UACX,IACAI,OAAM,kBAAMJ,EAAU,QAAhB,GACV,GAAE,CAACN,KAGF,gCACc,YAAXK,GAAwBF,EAAKQ,OAAS,IACrC,eAAIC,UAAWC,EAAf,SACGV,EAAKW,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,KAAMC,EAAb,EAAaA,aAAcC,EAA3B,EAA2BA,UAA3B,OACR,gBAAIN,UAAWC,EAAf,WACE,gBACED,UAAWC,EACXM,IACEF,EAAY,yCAC0BA,GAClCG,EAENC,IAAKL,GAAQ,UACbM,MAAM,WAER,iBAAKV,UAAWC,EAAhB,WACE,0BACE,qCACCG,GAAQ,cAEX,0BACE,yCACCE,GAAa,kBAlBcH,EAD1B,MA0BF,UAAXV,IACC,gBAAKO,UAAWC,EAAhB,kDAEU,YAAXR,IAAwB,SAAC,KAAD,CAASkB,KAAK,SAG5C,C","sources":["webpack://react-homework-template/./src/components/Cast/Cast.module.css?c9ee","components/Cast/Cast.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"castList\":\"Cast_castList__ARoWn\",\"castItem\":\"Cast_castItem__-Jcfe\",\"castMeta\":\"Cast_castMeta__+Ff+4\",\"castAvatar\":\"Cast_castAvatar__YTLV4\",\"empty\":\"Cast_empty__EEahE\"};","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport img404 from '../../images/404.jpg';\n\nimport { Spinner } from 'components';\n\nimport css from './Cast.module.css';\n\nimport { movieApi } from 'services/api';\n\nconst Cast = () => {\n  const { movieId } = useParams();\n  const [cast, setCast] = useState(0);\n  const [status, setStatus] = useState('success');\n\n  useEffect(() => {\n    setStatus('pending');\n\n    movieApi\n      .getMovieCredits(movieId)\n      .then(({ cast }) => {\n        setCast(cast);\n        setStatus('success');\n      })\n      .catch(() => setStatus('error'));\n  }, [movieId]);\n\n  return (\n    <>\n      {status === 'success' && cast.length > 0 && (\n        <ul className={css.castList}>\n          {cast.map(({ id, name, profile_path, character }) => (\n            <li className={css.castItem} key={id}>\n              <img\n                className={css.castAvatar}\n                src={\n                  profile_path\n                    ? `https://image.tmdb.org/t/p/w500${profile_path}`\n                    : img404\n                }\n                alt={name || 'unknown'}\n                width=\"100px\"\n              />\n              <div className={css.castMeta}>\n                <p>\n                  <span>Actor:</span>\n                  {name || 'unknown'}\n                </p>\n                <p>\n                  <span>Character:</span>\n                  {character || 'unknown'}\n                </p>\n              </div>\n            </li>\n          ))}\n        </ul>\n      )}\n      {status === 'error' && (\n        <div className={css.empty}>Can't find information about cast...</div>\n      )}\n      {status === 'pending' && <Spinner size=\"80\" />}\n    </>\n  );\n};\n\nexport default Cast;\n"],"names":["movieId","useParams","useState","cast","setCast","status","setStatus","useEffect","movieApi","then","catch","length","className","css","map","id","name","profile_path","character","src","img404","alt","width","size"],"sourceRoot":""}